<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<beans:import resource="MEMORY-JOBREPOSITORY.xml" />
	<!--<beans:import resource="DB-JOBREPOSITORY.xml"/> -->

	<beans:bean id="playerFileItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<beans:property name="resource"
			value="#{stepExecutionContext[fileName]}" />
		<beans:property name="strict" value="false" />
		<!--
			<beans:property name="resource" value="file:c:\data\input\player.csv"
			/>
		-->
		<beans:property name="lineMapper">
			<beans:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="delimiter" value="," />
						<beans:property name="names"
							value="ID,lastName,firstName,position,debutYear,finalYear" />
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean class="com.ecomputercoach.file.PlayerFieldSetMapper" />
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="careerProcessor" class="com.ecomputercoach.file.CareerProcessor"
		scope="step" />

	<beans:bean id="playerFileItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<!--
			<beans:property name="resource"
			value="file:c:\data\output\output.txt" />
		-->
		<beans:property name="resource"
			value="#{stepExecutionContext[outputFile]}" />
		<beans:property name="shouldDeleteIfExists" value="true" />
		<beans:property name="lineAggregator">
			<beans:bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<beans:property name="delimiter" value="-" />
				<beans:property name="fieldExtractor">
					<beans:bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<beans:property name="names" value="fullName,careerLength" />
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean name="step1:master"
		class="org.springframework.batch.core.partition.support.PartitionStep">
		<beans:property name="jobRepository" ref="jobRepository" />
		<beans:property name="stepExecutionSplitter">
			<beans:bean
				class="org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter">
				<beans:constructor-arg ref="jobRepository" />
				<beans:constructor-arg ref="step1" />
				<beans:constructor-arg>
					<beans:bean
						class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
						<beans:property name="resources"
							value="file:c:/data/input/splitfiles/player*.csv" />
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
		<beans:property name="partitionHandler">
			<beans:bean
				class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
				<beans:property name="taskExecutor" ref="asyncTaskExecutor" />
				<beans:property name="step" ref="step1" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<step id="step1">
		<tasklet job-repository="jobRepository" transaction-manager="jobRepository-transactionManager">
			<chunk reader="playerFileItemReader" processor="careerProcessor"
				writer="playerFileItemWriter" commit-interval="50" />
			<listeners>
				<listener ref="fileNameListener" />
			</listeners>
		</tasklet>
	</step>

	<beans:bean id="fileNameListener"
		class="com.ecomputercoach.file.partition.OutputFileListener" />

	<job id="file_partition_Job" job-repository="jobRepository">
		<step id="fileProcessStep" parent="step1:master" />
	</job>

</beans:beans>